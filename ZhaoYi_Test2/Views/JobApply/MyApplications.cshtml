@model IEnumerable<ZhaoYi_Test2.Models.JobApplication>
@using System.ComponentModel.DataAnnotations;
@{
    ViewData["Title"] = "Đơn ứng tuyển của tôi";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1>Đơn ứng tuyển của tôi</h1>
        </div>
        <div class="col-md-4 text-end">
            <a asp-controller="Interpreters" asp-action="Dashboard" class="btn btn-primary">
                <i class="bi bi-search"></i> Tìm việc làm mới
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <p>Bạn chưa ứng tuyển vào vị trí nào.</p>
            <a asp-controller="Interpreters" asp-action="Dashboard" class="btn btn-primary">
                Tìm kiếm việc làm ngay
            </a>
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var application in Model)
            {
                var jobPosting = application.JobPosting;
                if (jobPosting == null) continue;

                var statusClass = application.Status switch
                {
                    ApplicationStatus.Pending => "bg-warning",
                    ApplicationStatus.WaitingToStart => "bg-success",
                    ApplicationStatus.InProgress => "bg-primary",
                    ApplicationStatus.Completed => "bg-info",
                    ApplicationStatus.Canceled => "bg-secondary",
                    ApplicationStatus.Rejected => "bg-danger",
                    _ => "bg-secondary"
                };

                var jobStatusClass = jobPosting.Status switch
                {
                    JobStatus.Active => "bg-success",
                    JobStatus.Completed => "bg-info",
                    JobStatus.InProgress => "bg-primary",
                    JobStatus.Expired => "bg-secondary",
                    JobStatus.Cancelled => "bg-danger",
                    JobStatus.Pending => "bg-warning",
                    _ => "bg-secondary"
                };

                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header @(application.Status == ApplicationStatus.Rejected ? "bg-light text-muted" : "bg-primary text-white")">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="card-title mb-0 text-truncate">
                                    <a asp-controller="JobApply" asp-action="ApplicationDetails" asp-route-id="@application.JobApplicationId"
                                       class="@(application.Status == ApplicationStatus.Rejected ? "text-muted" : "text-white") text-decoration-none">
                                        @jobPosting.Title
                                    </a>
                                </h5>
                                <span class="badge @statusClass">
                                    @(GetDisplayName(application.Status))
                                </span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <strong>Công ty:</strong> @(jobPosting.Recruiter?.RecruiterName ?? "Không có thông tin")
                            </div>

                            <div class="mb-2">
                                <strong>Lương:</strong> @jobPosting.Salary.ToString("N0") VND
                            </div>

                            <div class="mb-2">
                                <strong>Địa điểm:</strong> @jobPosting.WorkLocation
                            </div>

                            <div class="mb-2">
                                <strong>Ngày ứng tuyển:</strong> @application.ApplicationDate.ToString("dd/MM/yyyy HH:mm")
                            </div>

                            @if (application.Status == ApplicationStatus.WaitingToStart ||
                           application.Status == ApplicationStatus.InProgress ||
                           application.Status == ApplicationStatus.Completed)
                            {
                                <div class="mb-2">
                                    <strong>Trạng thái công việc:</strong>
                                    <span class="badge @jobStatusClass">
                                        @(GetDisplayName(jobPosting.Status))
                                    </span>
                                </div>
                            }
                        </div>
                        <div class="card-footer bg-white">
                            <div class="d-flex gap-2">
                                <a asp-controller="JobApply" asp-action="ApplicationDetails" asp-route-id="@application.JobApplicationId"
                                   class="btn btn-sm btn-primary flex-grow-1">
                                    Chi tiết
                                </a>

                                @if (application.Status == ApplicationStatus.Pending)
                                {
                                    <a asp-controller="JobApply" asp-action="DeleteApplication" asp-route-id="@application.JobApplicationId"
                                       class="btn btn-sm btn-outline-danger"
                                       onclick="return confirm('Bạn có chắc chắn muốn hủy đơn ứng tuyển này?')">
                                        Hủy đơn
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    public string GetDisplayName(Enum enumValue)
    {
        if (enumValue == null)
            return "Unknown";

        var field = enumValue.GetType().GetField(enumValue.ToString());
        if (field == null)
            return enumValue.ToString();

        var displayAttribute = field
            .GetCustomAttributes(typeof(DisplayAttribute), false)
            .Cast<DisplayAttribute>()
            .SingleOrDefault();

        return displayAttribute?.Name ?? enumValue.ToString();
    }
}
