@model List<ZhaoYi_Test2.Models.JobPosting>
@{
    ViewData["Title"] = "Dashboard Phiên dịch viên";
    Layout = null; // We'll use a custom mobile layout
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - ZhaoYi Translation</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Reset và cài đặt cơ bản */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
            padding-top: 20px;
        }

        /* Container mô phỏng điện thoại */
        .mobile-container {
            width: 100%;
            max-width: 414px;
            height: 800px;
            background-color: #ffffff;
            border-radius: 20px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            position: relative;
            display: flex;
            flex-direction: column;
        }

        /* Header */
        header {
            background: linear-gradient(to bottom, #ffa751, #ff8a4c);
            padding: 15px 15px 25px 15px;
            display: flex;
            align-items: center;
            gap: 10px;
            border-bottom-left-radius: 25px;
            border-bottom-right-radius: 25px;
            color: white;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .search-bar {
            flex-grow: 1;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 20px;
            padding: 8px 12px;
            display: flex;
            align-items: center;
        }

            .search-bar i {
                margin-right: 8px;
                color: rgba(255, 255, 255, 0.9);
            }

            .search-bar input {
                border: none;
                background: none;
                outline: none;
                color: white;
                font-size: 1em;
                width: 100%;
            }

                .search-bar input::placeholder {
                    color: rgba(255, 255, 255, 0.8);
                }

        .filter-button,
        .notification-button {
            background-color: #ff6f00;
            border: none;
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 0.9em;
            display: flex;
            align-items: center;
            gap: 5px;
            transition: background-color 0.2s ease;
        }

        .notification-button {
            padding: 10px 12px;
            background: rgba(255, 255, 255, 0.3);
        }

            .filter-button:hover,
            .notification-button:hover {
                background-color: #e65100;
            }

            .notification-button:hover {
                background: rgba(255, 255, 255, 0.5);
            }

        /* Main content area */
        main {
            flex-grow: 1;
            overflow-y: auto;
            padding: 15px;
            background: linear-gradient(to bottom, #fff2e6, #ffffff 30%);
        }

        /* Banner vàng */
        .urgent-banner {
            background-color: #fff15a;
            color: #e65100;
            padding: 10px 15px;
            border-radius: 8px;
            text-align: center;
            font-weight: bold;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            font-size: 0.95em;
        }

            .urgent-banner i {
                color: #ff6f00;
            }

        /* Sections */
        section h2 {
            font-size: 1.2em;
            color: #333;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

            section h2 i.fa-fire {
                color: #ff6f00;
            }

        /* Job Card */
        .job-card {
            background-color: #ffffff;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            display: flex;
            gap: 15px;
            position: relative;
            transition: transform 0.2s ease;
        }

            .job-card:hover {
                transform: translateY(-2px);
            }

            /* Card tuyển dụng gấp */
            .job-card.urgent {
                background-color: #fff8e1;
                border: 1px solid #ffe082;
            }

        .job-logo img {
            width: 55px;
            height: 55px;
            border-radius: 8px;
            object-fit: contain;
            border: 1px solid #eee;
        }

        .job-info {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
        }

        .job-title {
            font-weight: 600;
            font-size: 1.05em;
            color: #222;
            margin-bottom: 4px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .job-title .fire-icon {
                color: #ff6f00;
                font-size: 1.1em;
                margin-left: 5px;
            }

        .company-name {
            color: #666;
            font-size: 0.9em;
            margin-bottom: 10px;
        }

        .job-details {
            font-size: 0.85em;
            color: #555;
            margin-bottom: 10px;
        }

            .job-details div {
                display: flex;
                align-items: center;
                gap: 8px;
                margin-bottom: 5px;
            }

            .job-details i {
                color: #ff8a4c;
                width: 16px;
                text-align: center;
            }

        .job-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-top: 1px solid #f0f0f0;
            padding-top: 10px;
            margin-top: auto;
        }

        .time-left {
            display: flex;
            align-items: center;
            gap: 5px;
            color: #888;
            font-size: 0.85em;
        }

            .time-left i {
                color: #aaa;
            }

        .bookmark-icon button {
            background: none;
            border: none;
            font-size: 1.3em;
            color: #ccc;
            cursor: pointer;
            padding: 5px;
        }

            .bookmark-icon button:hover i {
                color: #ff8a4c;
            }

        .arrow-indicator {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #ff8a4c;
            font-size: 1.2em;
        }

        /* Bottom Navigation */
        .bottom-nav {
            display: flex;
            justify-content: space-around;
            align-items: center;
            padding: 5px 0 10px 0;
            background-color: #ffffff;
            border-top: 1px solid #e0e0e0;
            position: sticky;
            bottom: 0;
            z-index: 10;
        }

        .nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            text-decoration: none;
            color: #aaa;
            font-size: 0.75em;
            padding: 5px 10px;
            transition: color 0.2s ease;
        }

            .nav-item i {
                font-size: 1.6em;
                margin-bottom: 3px;
            }

            .nav-item.active {
                color: #ff6f00;
            }

                .nav-item.active span {
                    font-weight: 500;
                }

            .nav-item:hover {
                color: #ff8a4c;
            }

        .add-button {
            background-color: #ff6f00;
            color: white;
            border: none;
            width: 55px;
            height: 55px;
            border-radius: 50%;
            font-size: 2.2em;
            line-height: 50px;
            text-align: center;
            cursor: pointer;
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
            position: relative;
            bottom: 18px;
            transition: background-color 0.2s ease, transform 0.2s ease;
        }

            .add-button:hover {
                background-color: #e65100;
                transform: translateY(-2px);
            }

        /* Custom Scrollbar */
        main::-webkit-scrollbar {
            width: 5px;
        }

        main::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        main::-webkit-scrollbar-thumb {
            background: #ccc;
            border-radius: 5px;
        }

            main::-webkit-scrollbar-thumb:hover {
                background: #aaa;
            }



        {
            background-color: #f0f2f5;
            padding-top: 50px;
            padding-bottom: 50px;
        }

        .mobile-container {
            margin: 0 auto;
            height: 80vh;
            max-height: 800px;
        }

        }
    </style>
</head>
<body>
    <div class="mobile-container">
        <header>
            <div class="search-bar">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Tìm kiếm công việc...">
            </div>
            <a href="#" class="filter-button">
                <i class="fas fa-sliders-h"></i> Lọc
            </a>
            <a href="#" class="notification-button">
                <i class="fas fa-bell"></i>
            </a>
        </header>

        <main>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success p-3 mb-3 rounded bg-success-subtle text-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger p-3 mb-3 rounded bg-danger-subtle text-danger">
                    @TempData["ErrorMessage"]
                </div>
            }

            <div class="urgent-banner">
                <i class="fas fa-bolt"></i> TÌM VIỆC PHIÊN DỊCH VIÊN CẤP TỐC
            </div>

            <section class="urgent-jobs">
                <h2><i class="fas fa-fire"></i> Việc làm cần gấp</h2>

                @{
                    var urgentJobs = Model?.Where(j =>
                    j.Status == JobStatus.Active &&
                    (j.ExpiryDate - DateTime.Now).TotalHours < 24 &&
                    j.ExpiryDate > DateTime.Now).Take(3).ToList();
                }

                @if (urgentJobs != null && urgentJobs.Any())
                {
                    foreach (var job in urgentJobs)
                    {
                        <a href="@Url.Action("Details", "JobApply", new { id = job.JobPostingId })" class="text-decoration-none">
                            <div class="job-card urgent">
                                <div class="job-logo">
                                    <img src="~/images/logo-zhaoyi.png" alt="Company Logo">
                                </div>
                                <div class="job-info">
                                    <div class="job-title">
                                        @job.Title <i class="fas fa-fire fire-icon"></i>
                                    </div>
                                    <div class="company-name">@(job.Recruiter?.RecruiterName ?? "ZhaoYi Translation")</div>
                                    <div class="job-details">
                                        <div>
                                            <i class="fas fa-briefcase"></i>
                                            @(string.IsNullOrEmpty(job.Field) ? "Tổng hợp" : job.Field)
                                        </div>
                                        <div>
                                            <i class="fas fa-map-marker-alt"></i> @job.WorkLocation
                                        </div>
                                    </div>
                                    <div class="job-footer">
                                        <div class="time-left">
                                            <i class="far fa-clock"></i>
                                            @{
                                                var hoursLeft = (int)(job.ExpiryDate - DateTime.Now).TotalHours;
                                                @(hoursLeft > 0 ? $"Còn {hoursLeft}h" : "Sắp hết hạn")
                                            }
                                        </div>
                                        <div class="bookmark-icon">
                                            <button><i class="far fa-bookmark"></i></button>
                                        </div>
                                    </div>
                                </div>
                                <i class="fas fa-chevron-right arrow-indicator"></i>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <p class="text-muted">Không có công việc cần gấp.</p>
                }
            </section>

            <section class="recommended-jobs">
                <h2>Công việc phù hợp với bạn</h2>

                @{
                    var recommendedJobs = Model?.Where(j =>
                    j.Status == JobStatus.Active &&
                    j.ExpiryDate > DateTime.Now)
                    .OrderByDescending(j => j.PostedDate)
                    .Take(5)
                    .ToList();
                }

                @if (recommendedJobs != null && recommendedJobs.Any())
                {
                    foreach (var job in recommendedJobs)
                    {
                        <a href="@Url.Action("Details", "JobApply", new { id = job.JobPostingId })" class="text-decoration-none">
                            <div class="job-card">
                                <div class="job-logo">
                                    <img src="~/images/logo-zhaoyi.png" alt="Company Logo">
                                </div>
                                <div class="job-info">
                                    <div class="job-title">@job.Title</div>
                                    <div class="company-name">@(job.Recruiter?.RecruiterName ?? "ZhaoYi Translation")</div>
                                    <div class="job-details">
                                        <div>
                                            <i class="fas fa-briefcase"></i>
                                            @(string.IsNullOrEmpty(job.Field) ? "Tổng hợp" : job.Field)
                                        </div>
                                        <div>
                                            <i class="fas fa-map-marker-alt"></i> @job.WorkLocation
                                        </div>
                                        <div>
                                            <i class="fas fa-money-bill-wave"></i> @job.Salary.ToString("N0") VND
                                        </div>
                                    </div>
                                    <div class="job-footer">
                                        <div class="time-left">
                                            <i class="far fa-clock"></i>
                                            @{
                                                var daysLeft = (int)(job.ExpiryDate - DateTime.Now).TotalDays;
                                                if (daysLeft > 0)
                                                {
                                                    @($"Còn {daysLeft} ngày")
                                                }
                                                else
                                                {
                                                    var hoursLeft = (int)(job.ExpiryDate - DateTime.Now).TotalHours;
                                                    @(hoursLeft > 0 ? $"Còn {hoursLeft}h" : "Sắp hết hạn")
                                                }
                                            }
                                        </div>
                                        <div class="bookmark-icon">
                                            <button><i class="far fa-bookmark"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    }
                }
                else
                {
                    <p class="text-muted">Không có công việc phù hợp.</p>
                }
            </section>
        </main>

        <nav class="bottom-nav">
            <a href="#" class="nav-item active">
                <i class="fas fa-home"></i>
                <span>Trang chủ</span>
            </a>
            <a href="@Url.Action("Profile", "Interpreters")" class="nav-item">
                <i class="far fa-user-circle"></i>
                <span>Hồ sơ</span>
            </a>
            <a href="@Url.Action("Index", "Home")" class="add-button">+</a>
            <a href="@Url.Action("MyApplications", "JobApply")" class="nav-item">
                <i class="far fa-file-alt"></i>
                <span>Ứng tuyển</span>
            </a>
            <a href="#" class="nav-item">
                <i class="fas fa-cog"></i>
                <span>Cài đặt</span>
            </a>
        </nav>
    </div>
</body>
</html>
