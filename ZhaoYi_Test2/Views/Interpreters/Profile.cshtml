@model ZhaoYi_Test2.Models.Interpreter
@{
    ViewData["Title"] = "Hồ sơ phiên dịch viên";
}

<h1>Hồ sơ phiên dịch viên</h1>

@if (TempData["StatusMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["StatusMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="row">
    <div class="col-md-8">
        @if (ViewBag.HasProfile == false)
        {
            <div class="alert alert-info">
                Bạn chưa có hồ sơ phiên dịch viên. Vui lòng tạo hồ sơ của bạn.
            </div>
        }
        else
        {
            <div class="profile-completion mb-4">
                <div class="d-flex justify-content-between mb-1">
                    <span>Mức độ hoàn thiện hồ sơ</span>
                    <span>@ViewBag.ProfileCompletionPercentage%</span>
                </div>
                <div class="progress">
                    <div class="progress-bar bg-success" role="progressbar" 
                         style="width: @ViewBag.ProfileCompletionPercentage%;" 
                         aria-valuenow="@ViewBag.ProfileCompletionPercentage" 
                         aria-valuemin="0" 
                         aria-valuemax="100">@ViewBag.ProfileCompletionPercentage%</div>
                </div>
            </div>
        }

        <ul class="nav nav-tabs mb-4" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="basic-tab" data-bs-toggle="tab" data-bs-target="#basic-info" 
                        type="button" role="tab" aria-controls="basic-info" aria-selected="true">
                    Thông tin cơ bản
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="education-tab" data-bs-toggle="tab" data-bs-target="#education" 
                        type="button" role="tab" aria-controls="education" aria-selected="false">
                    Học vấn
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="experience-tab" data-bs-toggle="tab" data-bs-target="#experience" 
                        type="button" role="tab" aria-controls="experience" aria-selected="false">
                    Kinh nghiệm làm việc
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="projects-tab" data-bs-toggle="tab" data-bs-target="#projects" 
                        type="button" role="tab" aria-controls="projects" aria-selected="false">
                    Dự án/thành tựu
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="skills-tab" data-bs-toggle="tab" data-bs-target="#skills" 
                        type="button" role="tab" aria-controls="skills" aria-selected="false">
                    Kỹ năng
                </button>
            </li>
        </ul>

        <div class="tab-content" id="profileTabContent">
            <!-- Tab Thông tin cơ bản -->
            <div class="tab-pane fade show active" id="basic-info" role="tabpanel" aria-labelledby="basic-tab">
                <form method="post" enctype="multipart/form-data" id="profileForm">
                    <div asp-validation-summary="All" class="text-danger"></div>

                    <input type="hidden" asp-for="InterpreterId" />
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="AvatarPath" id="avatarPathInput" />

                    <div class="row mb-4">
                        <div class="col-md-4 text-center">
                            <div class="avatar-container mb-3">
                                @if (!string.IsNullOrEmpty(Model.AvatarPath))
                                {
                                    <img src="@Url.Content($"~/uploads/avatars/{Model.AvatarPath}")" alt="Avatar"
                                         class="img-fluid rounded-circle" style="width: 150px; height: 150px; object-fit: cover;"
                                         id="avatarPreview" />
                                }
                                else
                                {
                                    <img src="@Url.Content("~/images/default-avatar.png")" alt="Default Avatar"
                                         class="img-fluid rounded-circle" style="width: 150px; height: 150px; object-fit: cover;"
                                         id="avatarPreview" />
                                }
                            </div>
                            <div class="form-group mb-3">
                                <label for="avatarFile" class="form-label">Cập nhật ảnh đại diện</label>
                                <input type="file" id="avatarFile" name="avatarFile" class="form-control" accept="image/*" />
                                <div class="form-text">Định dạng JPG, PNG. Tối đa 2MB.</div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.AvatarPath))
                            {
                                <button type="button" id="removeAvatarBtn" class="btn btn-outline-danger btn-sm">
                                    <i class="bi bi-trash"></i> Xóa ảnh đại diện
                                </button>
                                <input type="hidden" id="removeAvatar" name="removeAvatar" value="false" />
                            }
                        </div>

                        <div class="col-md-8">
                            <div class="form-group mb-3">
                                <label asp-for="InterpreterName" class="form-label">Họ và tên</label>
                                <input asp-for="InterpreterName" class="form-control form-field" />
                                <span asp-validation-for="InterpreterName" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="DateOfBirth" class="form-label">Ngày sinh</label>
                                <input asp-for="DateOfBirth" class="form-control form-field" type="date" />
                                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="Gender" class="form-label">Giới tính</label>
                                <select asp-for="Gender" class="form-select form-field">
                                    <option value="Nam">Nam</option>
                                    <option value="Nữ">Nữ</option>
                                    <option value="Khác">Khác</option>
                                </select>
                                <span asp-validation-for="Gender" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="WorkLocation" class="form-label">Khu vực làm việc</label>
                                <input asp-for="WorkLocation" class="form-control form-field" />
                                <span asp-validation-for="WorkLocation" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="DetailedAddress" class="form-label">Địa chỉ chi tiết</label>
                                <textarea asp-for="DetailedAddress" class="form-control form-field" rows="3"></textarea>
                                <span asp-validation-for="DetailedAddress" class="text-danger"></span>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="YearsOfExperience" class="form-label">Kinh nghiệm</label>
                                <select asp-for="YearsOfExperience" asp-items="Html.GetEnumSelectList<ZhaoYi_Test2.Models.ExperienceLevel>()" class="form-select form-field"></select>
                                <span asp-validation-for="YearsOfExperience" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group mb-3 d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            @(ViewBag.HasProfile ? "Cập nhật hồ sơ" : "Tạo hồ sơ")
                        </button>
                        <a href="javascript:history.back()" class="btn btn-outline-secondary" id="cancelBtn">Hủy</a>
                    </div>
                </form>
            </div>

            <!-- Tab Học vấn -->
            <div class="tab-pane fade" id="education" role="tabpanel" aria-labelledby="education-tab">
                <h3>Học vấn</h3>
                
                @if (Model.Educations != null && Model.Educations.Any())
                {
                    <div class="accordion mb-4" id="educationAccordion">
                        @foreach (var edu in Model.Educations.OrderByDescending(e => e.StartDate))
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                            data-bs-target="#collapse-edu-@edu.EducationId">
                                        <div class="d-flex justify-content-between w-100">
                                            <span>@edu.SchoolName - @edu.Degree</span>
                                            <span class="text-muted">
                                                @edu.StartDate.ToString("MM/yyyy") - 
                                                @(edu.EndDate.HasValue ? edu.EndDate.Value.ToString("MM/yyyy") : "Hiện tại")
                                            </span>
                                        </div>
                                    </button>
                                </h2>
                                <div id="collapse-edu-@edu.EducationId" class="accordion-collapse collapse">
                                    <div class="accordion-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <p><strong>Chuyên ngành:</strong> @edu.Major</p>
                                                <p><strong>Mô tả:</strong> @edu.Description</p>
                                            </div>
                                            <div class="col-md-4 text-end">
                                                <button class="btn btn-sm btn-outline-primary me-2 edit-education-btn" 
                                                        data-education-id="@edu.EducationId"
                                                        data-school-name="@edu.SchoolName"
                                                        data-major="@edu.Major"
                                                        data-degree="@edu.Degree"
                                                        data-start-date="@edu.StartDate.ToString("yyyy-MM-dd")"
                                                        data-end-date="@(edu.EndDate.HasValue ? edu.EndDate.Value.ToString("yyyy-MM-dd") : "")"
                                                        data-description="@edu.Description">
                                                    <i class="bi bi-pencil"></i> Sửa
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger delete-education-btn"
                                                        data-education-id="@edu.EducationId"
                                                        data-education-name="@edu.SchoolName">
                                                    <i class="bi bi-trash"></i> Xóa
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        Bạn chưa thêm thông tin học vấn nào. Vui lòng thêm thông tin để hoàn thiện hồ sơ.
                    </div>
                }

                <button class="btn btn-success mb-4" id="addEducationBtn">
                    <i class="bi bi-plus-circle"></i> Thêm học vấn
                </button>
            </div>

            <!-- Tab Kinh nghiệm làm việc -->
            <div class="tab-pane fade" id="experience" role="tabpanel" aria-labelledby="experience-tab">
                <h3>Kinh nghiệm làm việc</h3>
                
                @if (Model.WorkExperiences != null && Model.WorkExperiences.Any())
                {
                    <div class="accordion mb-4" id="experienceAccordion">
                        @foreach (var exp in Model.WorkExperiences.OrderByDescending(e => e.StartDate))
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                            data-bs-target="#collapse-exp-@exp.WorkExperienceId">
                                        <div class="d-flex justify-content-between w-100">
                                            <span>@exp.JobTitle - @exp.CompanyName</span>
                                            <span class="text-muted">
                                                @exp.StartDate.ToString("MM/yyyy") - 
                                                @(exp.EndDate.HasValue ? exp.EndDate.Value.ToString("MM/yyyy") : "Hiện tại")
                                            </span>
                                        </div>
                                    </button>
                                </h2>
                                <div id="collapse-exp-@exp.WorkExperienceId" class="accordion-collapse collapse">
                                    <div class="accordion-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <p>@exp.JobDescription</p>
                                            </div>
                                            <div class="col-md-4 text-end">
                                                <button class="btn btn-sm btn-outline-primary me-2 edit-experience-btn" 
                                                        data-experience-id="@exp.WorkExperienceId"
                                                        data-job-title="@exp.JobTitle"
                                                        data-company-name="@exp.CompanyName"
                                                        data-start-date="@exp.StartDate.ToString("yyyy-MM-dd")"
                                                        data-end-date="@(exp.EndDate.HasValue ? exp.EndDate.Value.ToString("yyyy-MM-dd") : "")"
                                                        data-description="@exp.JobDescription">
                                                    <i class="bi bi-pencil"></i> Sửa
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger delete-experience-btn"
                                                        data-experience-id="@exp.WorkExperienceId"
                                                        data-experience-name="@exp.JobTitle">
                                                    <i class="bi bi-trash"></i> Xóa
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        Bạn chưa thêm thông tin kinh nghiệm làm việc nào. Vui lòng thêm thông tin để hoàn thiện hồ sơ.
                    </div>
                }

                <button class="btn btn-success mb-4" id="addExperienceBtn">
                    <i class="bi bi-plus-circle"></i> Thêm kinh nghiệm làm việc
                </button>
            </div>

            <!-- Tab Dự án/thành tựu -->
            <div class="tab-pane fade" id="projects" role="tabpanel" aria-labelledby="projects-tab">
                <h3>Dự án và thành tựu</h3>
                
                @if (Model.Projects != null && Model.Projects.Any())
                {
                    <div class="accordion mb-4" id="projectsAccordion">
                        @foreach (var project in Model.Projects.OrderByDescending(p => p.StartDate))
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" 
                                            data-bs-target="#collapse-proj-@project.ProjectId">
                                        <div class="d-flex justify-content-between w-100">
                                            <span>@project.ProjectName</span>
                                            <span class="text-muted">
                                                @project.StartDate.ToString("MM/yyyy") - 
                                                @(project.EndDate.HasValue ? project.EndDate.Value.ToString("MM/yyyy") : "Hiện tại")
                                            </span>
                                        </div>
                                    </button>
                                </h2>
                                <div id="collapse-proj-@project.ProjectId" class="accordion-collapse collapse">
                                    <div class="accordion-body">
                                        <div class="row">
                                            <div class="col-md-8">
                                                <p>@project.Description</p>
                                            </div>
                                            <div class="col-md-4 text-end">
                                                <button class="btn btn-sm btn-outline-primary me-2 edit-project-btn" 
                                                        data-project-id="@project.ProjectId"
                                                        data-project-name="@project.ProjectName"
                                                        data-start-date="@project.StartDate.ToString("yyyy-MM-dd")"
                                                        data-end-date="@(project.EndDate.HasValue ? project.EndDate.Value.ToString("yyyy-MM-dd") : "")"
                                                        data-description="@project.Description">
                                                    <i class="bi bi-pencil"></i> Sửa
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger delete-project-btn"
                                                        data-project-id="@project.ProjectId"
                                                        data-project-name="@project.ProjectName">
                                                    <i class="bi bi-trash"></i> Xóa
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        Bạn chưa thêm thông tin dự án/thành tựu nào. Vui lòng thêm thông tin để hoàn thiện hồ sơ.
                    </div>
                }

                <button class="btn btn-success mb-4" id="addProjectBtn">
                    <i class="bi bi-plus-circle"></i> Thêm dự án/thành tựu
                </button>
            </div>

            <!-- Tab Kỹ năng -->
            <div class="tab-pane fade" id="skills" role="tabpanel" aria-labelledby="skills-tab">
                <h3>Kỹ năng</h3>
                
                <form method="post" asp-action="UpdateSkills" id="skillsForm">
                    <div class="form-group mb-3">
                        <label for="skills" class="form-label">Danh sách kỹ năng (phân cách bằng dấu phẩy)</label>
                        <textarea name="skills" id="skills" class="form-control form-field" rows="3">@Model.Skills</textarea>
                        <div class="form-text">Ví dụ: Tiếng Anh, Tiếng Trung, Dịch đuồi, Dịch cabin, Dịch văn bản</div>
                    </div>

                    <div class="form-group mb-3">
                        <button type="submit" class="btn btn-primary">Cập nhật kỹ năng</button>
                    </div>
                </form>

                @if (!string.IsNullOrEmpty(Model.Skills))
                {
                    <div class="skills-tags mt-4">
                        <h5>Các kỹ năng của bạn:</h5>
                        <div class="d-flex flex-wrap gap-2">
                            @foreach (var skill in Model.Skills.Split(',').Select(s => s.Trim()))
                            {
                                <span class="badge bg-primary">@skill</span>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="mt-4">
            <a href="@Url.Action("DownloadProfilePdf")" class="btn btn-outline-primary">
                <i class="bi bi-download"></i> Tải hồ sơ dạng PDF
            </a>
        </div>
    </div>
</div>

<!-- Modal xác nhận rời trang -->
<div class="modal fade" id="leaveConfirmModal" tabindex="-1" aria-labelledby="leaveConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="leaveConfirmModalLabel">Xác nhận</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có những thay đổi chưa được lưu. Bạn có chắc chắn muốn rời khỏi trang này không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Ở lại</button>
                <button type="button" class="btn btn-danger" id="confirmLeaveBtn">Rời khỏi</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm/sửa thông tin học vấn -->
<div class="modal fade" id="educationModal" tabindex="-1" aria-labelledby="educationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="educationModalLabel">Thêm thông tin học vấn</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AddEducation" method="post" id="educationForm">
                <div class="modal-body">
                    <input type="hidden" id="educationId" name="EducationId" value="0" />
                    <div class="form-group mb-3">
                        <label for="schoolName" class="form-label">Tên trường</label>
                        <input type="text" class="form-control" id="schoolName" name="SchoolName" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="major" class="form-label">Chuyên ngành đào tạo</label>
                        <input type="text" class="form-control" id="major" name="Major" />
                    </div>
                    <div class="form-group mb-3">
                        <label for="degree" class="form-label">Bằng cấp</label>
                        <input type="text" class="form-control" id="degree" name="Degree" />
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="startDate" class="form-label">Ngày bắt đầu</label>
                                <input type="date" class="form-control" id="eduStartDate" name="StartDate" required />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="endDate" class="form-label">Ngày kết thúc</label>
                                <input type="date" class="form-control" id="eduEndDate" name="EndDate" />
                                <div class="form-check mt-2">
                                    <input class="form-check-input" type="checkbox" id="eduCurrentlyStudying">
                                    <label class="form-check-label" for="eduCurrentlyStudying">
                                        Đang học
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="description" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="eduDescription" name="Description" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa thông tin học vấn -->
<div class="modal fade" id="deleteEducationModal" tabindex="-1" aria-labelledby="deleteEducationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteEducationModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa thông tin học vấn này không?
                <p id="deleteEducationName" class="fw-bold mt-2"></p>
            </div>
            <div class="modal-footer">
                <form asp-action="DeleteEducation" method="post">
                    <input type="hidden" id="deleteEducationId" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm/sửa kinh nghiệm làm việc -->
<div class="modal fade" id="experienceModal" tabindex="-1" aria-labelledby="experienceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="experienceModalLabel">Thêm kinh nghiệm làm việc</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AddWorkExperience" method="post" id="experienceForm">
                <div class="modal-body">
                    <input type="hidden" id="experienceId" name="WorkExperienceId" value="0" />
                    <div class="form-group mb-3">
                        <label for="jobTitle" class="form-label">Chức vụ</label>
                        <input type="text" class="form-control" id="jobTitle" name="JobTitle" required />
                    </div>
                    <div class="form-group mb-3">
                        <label for="companyName" class="form-label">Tên công ty</label>
                        <input type="text" class="form-control" id="companyName" name="CompanyName" required />
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="expStartDate" class="form-label">Ngày bắt đầu</label>
                                <input type="date" class="form-control" id="expStartDate" name="StartDate" required />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="expEndDate" class="form-label">Ngày kết thúc</label>
                                <input type="date" class="form-control" id="expEndDate" name="EndDate" />
                                <div class="form-check mt-2">
                                    <input class="form-check-input" type="checkbox" id="expCurrentlyWorking">
                                    <label class="form-check-label" for="expCurrentlyWorking">
                                        Đang làm việc
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="jobDescription" class="form-label">Mô tả công việc</label>
                        <textarea class="form-control" id="jobDescription" name="JobDescription" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa kinh nghiệm làm việc -->
<div class="modal fade" id="deleteExperienceModal" tabindex="-1" aria-labelledby="deleteExperienceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteExperienceModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa kinh nghiệm làm việc này không?
                <p id="deleteExperienceName" class="fw-bold mt-2"></p>
            </div>
            <div class="modal-footer">
                <form asp-action="DeleteWorkExperience" method="post">
                    <input type="hidden" id="deleteExperienceId" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm/sửa dự án/thành tựu -->
<div class="modal fade" id="projectModal" tabindex="-1" aria-labelledby="projectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="projectModalLabel">Thêm dự án/thành tựu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="AddProject" method="post" id="projectForm">
                <div class="modal-body">
                    <input type="hidden" id="projectId" name="ProjectId" value="0" />
                    <div class="form-group mb-3">
                        <label for="projectName" class="form-label">Tên dự án/thành tựu</label>
                        <input type="text" class="form-control" id="projectName" name="ProjectName" required />
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="projStartDate" class="form-label">Thời gian bắt đầu</label>
                                <input type="date" class="form-control" id="projStartDate" name="StartDate" required />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="projEndDate" class="form-label">Thời gian kết thúc</label>
                                <input type="date" class="form-control" id="projEndDate" name="EndDate" />
                                <div class="form-check mt-2">
                                    <input class="form-check-input" type="checkbox" id="projCurrentlyWorking">
                                    <label class="form-check-label" for="projCurrentlyWorking">
                                        Đang thực hiện
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="projectDescription" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="projectDescription" name="Description" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa dự án/thành tựu -->
<div class="modal fade" id="deleteProjectModal" tabindex="-1" aria-labelledby="deleteProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteProjectModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa dự án/thành tựu này không?
                <p id="deleteProjectName" class="fw-bold mt-2"></p>
            </div>
            <div class="modal-footer">
                <form asp-action="DeleteProject" method="post">
                    <input type="hidden" id="deleteProjectId" name="id" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let formChanged = false;
        let originalFormData;
        const modal = new bootstrap.Modal(document.getElementById('leaveConfirmModal'));
        let redirectUrl = '';
        let isSubmitting = false; // Biến theo dõi việc đang submit

        // Lưu trạng thái ban đầu của form
        function saveInitialState() {
            const form = document.getElementById('profileForm');
            originalFormData = new FormData(form);
        }

        // Kiểm tra xem form có thay đổi không
        function isFormChanged() {
            if (isSubmitting) return false; // Nếu đang submit thì không coi là thay đổi

            const currentForm = document.getElementById('profileForm');
            const currentFormData = new FormData(currentForm);

            // Kiểm tra các trường input, textarea, select
            const formFields = document.querySelectorAll('.form-field');
            for (const field of formFields) {
                if (field.value !== originalFormData.get(field.name)) {
                    return true;
                }
            }

            // Kiểm tra nếu đã chọn file avatar mới
            if (document.getElementById('avatarFile').files.length > 0) {
                return true;
            }

            // Kiểm tra nếu đã nhấn nút xóa avatar
            if (document.getElementById('removeAvatar') && document.getElementById('removeAvatar').value === 'true') {
                return true;
            }

            return false;
        }

        // Xử lý khi rời trang
        function handleLeavePage(e) {
            if (!isSubmitting && (formChanged || isFormChanged())) {
                e.preventDefault();
                modal.show();
                redirectUrl = e.target.href || '';
                return false;
            }
            return true;
        }

        // Preview ảnh trước khi upload
        document.getElementById('avatarFile').addEventListener('change', function (e) {
            formChanged = true;
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const avatarPreview = document.getElementById('avatarPreview');
                    avatarPreview.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });

        // Xử lý nút xóa ảnh
        if (document.getElementById('removeAvatarBtn')) {
            document.getElementById('removeAvatarBtn').addEventListener('click', function () {
                formChanged = true;
                document.getElementById('avatarPreview').src = '@Url.Content("~/images/default-avatar.png")';
                document.getElementById('avatarFile').value = ''; // Xóa file đã chọn nếu có
                document.getElementById('removeAvatar').value = 'true';
            });
        }

        // Theo dõi thay đổi form
        document.querySelectorAll('.form-field').forEach(field => {
            field.addEventListener('input', () => {
                formChanged = true;
            });
        });

        // Cảnh báo khi rời trang
        document.querySelectorAll('a:not([href^="#"])').forEach(link => {
            if (!link.id || link.id !== 'confirmLeaveBtn') {
                link.addEventListener('click', handleLeavePage);
            }
        });

        // Nút xác nhận rời khỏi trang
        document.getElementById('confirmLeaveBtn').addEventListener('click', function() {
            formChanged = false;
            if (redirectUrl) {
                window.location.href = redirectUrl;
            } else {
                window.history.back();
            }
        });

        // Nút hủy
        document.getElementById('cancelBtn').addEventListener('click', function(e) {
            if (!isSubmitting && (formChanged || isFormChanged())) {
                e.preventDefault();
                modal.show();
                return false;
            }
        });

        // Khi mở trang, lưu trạng thái ban đầu của form
        document.addEventListener('DOMContentLoaded', saveInitialState);

        // Khi form được submit, đánh dấu đang submit
        document.getElementById('profileForm').addEventListener('submit', function() {
            isSubmitting = true;
            formChanged = false;
        });

        // Cảnh báo khi tải lại trang hoặc đóng tab
        window.addEventListener('beforeunload', function(e) {
            if (!isSubmitting && (formChanged || isFormChanged())) {
                e.preventDefault();
                e.returnValue = 'Bạn có thay đổi chưa được lưu. Bạn có chắc chắn muốn rời khỏi trang này không?';
                return e.returnValue;
            }
        });

        // ----------------- Xử lý học vấn ------------------
        const educationModal = new bootstrap.Modal(document.getElementById('educationModal'));
        const deleteEducationModal = new bootstrap.Modal(document.getElementById('deleteEducationModal'));

        // Mở modal thêm học vấn
        document.getElementById('addEducationBtn').addEventListener('click', function() {
            document.getElementById('educationId').value = '0';
            document.getElementById('educationForm').reset();
            document.getElementById('educationForm').action = '@Url.Action("AddEducation")';
            document.getElementById('educationModalLabel').textContent = 'Thêm thông tin học vấn';
            educationModal.show();
        });

        // Xử lý đang học
        document.getElementById('eduCurrentlyStudying').addEventListener('change', function() {
            if (this.checked) {
                document.getElementById('eduEndDate').value = '';
                document.getElementById('eduEndDate').disabled = true;
            } else {
                document.getElementById('eduEndDate').disabled = false;
            }
        });

        // Mở modal sửa học vấn
        document.querySelectorAll('.edit-education-btn').forEach(button => {
            button.addEventListener('click', function() {
                const form = document.getElementById('educationForm');
                form.reset();
                
                const id = this.getAttribute('data-education-id');
                const school = this.getAttribute('data-school-name');
                const major = this.getAttribute('data-major');
                const degree = this.getAttribute('data-degree');
                const startDate = this.getAttribute('data-start-date');
                const endDate = this.getAttribute('data-end-date');
                const description = this.getAttribute('data-description');
                
                document.getElementById('educationId').value = id;
                document.getElementById('schoolName').value = school;
                document.getElementById('major').value = major || '';
                document.getElementById('degree').value = degree || '';
                document.getElementById('eduStartDate').value = startDate;
                document.getElementById('eduEndDate').value = endDate;
                document.getElementById('eduDescription').value = description || '';
                
                if (!endDate) {
                    document.getElementById('eduCurrentlyStudying').checked = true;
                    document.getElementById('eduEndDate').disabled = true;
                } else {
                    document.getElementById('eduCurrentlyStudying').checked = false;
                    document.getElementById('eduEndDate').disabled = false;
                }
                
                form.action = '@Url.Action("EditEducation")';
                document.getElementById('educationModalLabel').textContent = 'Sửa thông tin học vấn';
                
                educationModal.show();
            });
        });

        // Mở modal xóa học vấn
        document.querySelectorAll('.delete-education-btn').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-education-id');
                const name = this.getAttribute('data-education-name');
                
                document.getElementById('deleteEducationId').value = id;
                document.getElementById('deleteEducationName').textContent = name;
                
                deleteEducationModal.show();
            });
        });
        
        // ----------------- Xử lý kinh nghiệm làm việc ------------------
        const experienceModal = new bootstrap.Modal(document.getElementById('experienceModal'));
        const deleteExperienceModal = new bootstrap.Modal(document.getElementById('deleteExperienceModal'));

        // Mở modal thêm kinh nghiệm
        document.getElementById('addExperienceBtn').addEventListener('click', function() {
            document.getElementById('experienceId').value = '0';
            document.getElementById('experienceForm').reset();
            document.getElementById('experienceForm').action = '@Url.Action("AddWorkExperience")';
            document.getElementById('experienceModalLabel').textContent = 'Thêm kinh nghiệm làm việc';
            experienceModal.show();
        });

        // Xử lý đang làm việc
        document.getElementById('expCurrentlyWorking').addEventListener('change', function() {
            if (this.checked) {
                document.getElementById('expEndDate').value = '';
                document.getElementById('expEndDate').disabled = true;
            } else {
                document.getElementById('expEndDate').disabled = false;
            }
        });

        // Mở modal sửa kinh nghiệm
        document.querySelectorAll('.edit-experience-btn').forEach(button => {
            button.addEventListener('click', function() {
                const form = document.getElementById('experienceForm');
                form.reset();
                
                const id = this.getAttribute('data-experience-id');
                const jobTitle = this.getAttribute('data-job-title');
                const companyName = this.getAttribute('data-company-name');
                const startDate = this.getAttribute('data-start-date');
                const endDate = this.getAttribute('data-end-date');
                const description = this.getAttribute('data-description');
                
                document.getElementById('experienceId').value = id;
                document.getElementById('jobTitle').value = jobTitle;
                document.getElementById('companyName').value = companyName;
                document.getElementById('expStartDate').value = startDate;
                document.getElementById('expEndDate').value = endDate;
                document.getElementById('jobDescription').value = description || '';
                
                if (!endDate) {
                    document.getElementById('expCurrentlyWorking').checked = true;
                    document.getElementById('expEndDate').disabled = true;
                } else {
                    document.getElementById('expCurrentlyWorking').checked = false;
                    document.getElementById('expEndDate').disabled = false;
                }
                
                form.action = '@Url.Action("EditWorkExperience")';
                document.getElementById('experienceModalLabel').textContent = 'Sửa kinh nghiệm làm việc';
                
                experienceModal.show();
            });
        });

        // Mở modal xóa kinh nghiệm
        document.querySelectorAll('.delete-experience-btn').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-experience-id');
                const name = this.getAttribute('data-experience-name');
                
                document.getElementById('deleteExperienceId').value = id;
                document.getElementById('deleteExperienceName').textContent = name;
                
                deleteExperienceModal.show();
            });
        });
        
        // ----------------- Xử lý dự án/thành tựu ------------------
        const projectModal = new bootstrap.Modal(document.getElementById('projectModal'));
        const deleteProjectModal = new bootstrap.Modal(document.getElementById('deleteProjectModal'));

        // Mở modal thêm dự án
        document.getElementById('addProjectBtn').addEventListener('click', function() {
            document.getElementById('projectId').value = '0';
            document.getElementById('projectForm').reset();
            document.getElementById('projectForm').action = '@Url.Action("AddProject")';
            document.getElementById('projectModalLabel').textContent = 'Thêm dự án/thành tựu';
            projectModal.show();
        });

        // Xử lý đang thực hiện
        document.getElementById('projCurrentlyWorking').addEventListener('change', function() {
            if (this.checked) {
                document.getElementById('projEndDate').value = '';
                document.getElementById('projEndDate').disabled = true;
            } else {
                document.getElementById('projEndDate').disabled = false;
            }
        });

        // Mở modal sửa dự án
        document.querySelectorAll('.edit-project-btn').forEach(button => {
            button.addEventListener('click', function() {
                const form = document.getElementById('projectForm');
                form.reset();
                
                const id = this.getAttribute('data-project-id');
                const name = this.getAttribute('data-project-name');
                const startDate = this.getAttribute('data-start-date');
                const endDate = this.getAttribute('data-end-date');
                const description = this.getAttribute('data-description');
                
                document.getElementById('projectId').value = id;
                document.getElementById('projectName').value = name;
                document.getElementById('projStartDate').value = startDate;
                document.getElementById('projEndDate').value = endDate;
                document.getElementById('projectDescription').value = description || '';
                
                if (!endDate) {
                    document.getElementById('projCurrentlyWorking').checked = true;
                    document.getElementById('projEndDate').disabled = true;
                } else {
                    document.getElementById('projCurrentlyWorking').checked = false;
                    document.getElementById('projEndDate').disabled = false;
                }
                
                form.action = '@Url.Action("EditProject")';
                document.getElementById('projectModalLabel').textContent = 'Sửa dự án/thành tựu';
                
                projectModal.show();
            });
        });

        // Mở modal xóa dự án
        document.querySelectorAll('.delete-project-btn').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-project-id');
                const name = this.getAttribute('data-project-name');
                
                document.getElementById('deleteProjectId').value = id;
                document.getElementById('deleteProjectName').textContent = name;
                
                deleteProjectModal.show();
            });
        });
        
        // Lưu tab đang active vào localStorage
        document.querySelectorAll('button[data-bs-toggle="tab"]').forEach(tab => {
            tab.addEventListener('shown.bs.tab', function(event) {
                localStorage.setItem('activeProfileTab', event.target.id);
            });
        });
        
        // Khôi phục tab active khi tải lại trang
        document.addEventListener('DOMContentLoaded', function() {
            const activeTab = localStorage.getItem('activeProfileTab');
            if (activeTab) {
                const tab = document.getElementById(activeTab);
                if (tab) {
                    const bsTab = new bootstrap.Tab(tab);
                    bsTab.show();
                }
            }
        });
    </script>
}
